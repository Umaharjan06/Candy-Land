<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tblBoardGame.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAyAAAAJYCAMAAACtqHJCAAAABGdBTUEAALGPC/xhBQAAAdRQTFRFq5P/
        qJL+/75H/8AA/75GqJH//78w/8Am6rOaqJL/qpP/ppH+67OZ/75J/8AE8LaKuJnspZD/qZL//8EA/75I
        q5L/qJH+qJD/qpL/ppD+pY//qZH/qoz/p4v+p4r/6rKap4v/qYz/pYn+67KZ/8EE8LWKt5PspIn/qIv/
        rJ3/qpz+qZz//78m67aaq53/ppv+67WZ/78E8LiKuaHsppv/qpz/uvn/qf+TqP+GqP+Nqf+SqP+Lrf25
        uvj/u/j+rv26qP+MqP+IrP6wuPnxu/j/p/+Cu/f+uPjxu/f/uPn/rP25t/j/ufj+rf26q/6wtvnxufj/
        uPn7uPn8qP+HuPn9rP23t/j7rf24q/6up/+D/0tI/0tE/0+k/0+o/0tD/0+m/0+n/06R/0tG/0s//06X
        /0xZ/0s+/0+p/2Rk/2Ri/02n/2Rh/06m/02m/1WW/2Vf/1aW/1Oa/2Fu/0yo/2lp/2ln/2pn/06l/1eX
        /2pl/1eW/0yn/1Wa/2Zx/2ho/2hm/2lm/2lk/2VxppT/o5P+opL/6bSao5P/pZT/oJL+6rOZtJrsoJL/
        pJP/p5L+p5H/p5L/qZP/pZH+t5nspJD/uPr/t/n/ufr+rf66tvvxufr//2llO+wqrwAAAAlwSFlzAAAO
        wAAADsABataJCQAAE9pJREFUeF7t1eXWGGR6RuEPCyS4THXqOnXHi7RIp3SmpU5wD25hCBbcHeon2z/3
        GeydX9nXAdzrWe9ae70HtjPOdG1WctbZm5Wcs13NoQ07zj3v4PCGFUfOv+CQ+IIXXnTxJZduWnHZ5Vds
        WrNlT4EgBUIUCFUgSIFwBYIUCFEgVIEgBcIVCFIgRIFQBYIUCFcgSIEQBUIVCFIgXIEgBUIUCFUgSIFw
        BYIUCFEgVIEgBcIVCFIgRIFQBYIUCFcgSIEQBUIVCFIgXIEgBUIUCFUgSIFwBYIUCFEgVIEgBcIVCFIg
        RIFQBYIUCFcgSIEQBUIVCFIgXIEgBUIUCFUgSIFwBYIUCFEgVIEgBcIVCFIgRIFQBYIUCFcgSIEQBUIV
        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
        QKgCQQqEKxCkQIgCoQoEKRCuQJACIQqEKhCkQLgCQQqEKBCqQJAC4QoEKRCiQKgCQQqEKxCkQIgCoQoE
        KRCuQJACIQqEKhCkQLgCQQqEKBCqQJAC4QoEKRCiQKgCQQqEKxCkQIgCoQoEKRCuQJACIQqEKhCkQLgC
        QQqEKBCqQJAC4QoEKRCiQKgCQQqEKxCkQIhTEcj1titdW5VctVXLZj1Xb1hxzbXXbdZy6w03bltx0823
        3b5lxy0b9hQIsllPgSAFAhUIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1b
        lRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDc
        hi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQI
        UyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1b
        lRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDc
        hi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQI
        UyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1b
        lRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDchi1blRQIUyDc
        hi1blRQIUyDchi1blRQIcxoGcpfs6N2uzUru2arl3u1q7tuw4/4H7jq6YcWDDz2gHnjPw488umnF0cc2
        7Dl4XHZsw5bNSp7YquXJ7Wqe2rDj6WceP7Zhx7PPqQc+8fwLz25ZcezFDXsOXpId37BlsxI7kJe3q/nJ
        hh1Pv/LS8Q07TryqBvLa62+c2LLi+CkI5E3ZyQ1bNiuxA3lruxr5B3n1zZMbdrxtB/LO21tWnCwQqECY
        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
        kZ+uMwAAAABJRU5ErkJggg==
</value>
  </data>
</root>